{
  "root": true,
  "plugins": [
    "@nrwl/nx",
    "@typescript-eslint",
    "react",
    "react-hooks",
    "import",
    "cypress",
    "unused-imports"
  ],
  "extends": [
    "plugin:@typescript-eslint/recommended",
    "plugin:react/recommended",
    "plugin:prettier/recommended",
    "plugin:cypress/recommended"
  ],
  "overrides": [
    {
      "files": ["*.ts", "*.tsx", "*.js", "*.jsx"],
      "rules": {
        "@nrwl/nx/enforce-module-boundaries": [
          "error",
          {
            "enforceBuildableLibDependency": true,
            "allow": [],
            "depConstraints": [
              {
                "sourceTag": "*",
                "onlyDependOnLibsWithTags": ["*"]
              }
            ]
          }
        ]
      }
    },
    {
      "files": ["*.ts", "*.tsx"],
      "extends": [
        "plugin:@typescript-eslint/recommended",
        "plugin:react/recommended",
        "plugin:prettier/recommended",
        "plugin:cypress/recommended"
      ],
      "parser": "@typescript-eslint/parser",
      "parserOptions": {
        "ecmaVersion": 2018,
        "sourceType": "module"
      },
      "settings": {
        "react": {
          "version": "detect"
        }
      },
      "plugins": [
        "@typescript-eslint",
        "react",
        "react-hooks",
        "import",
        "cypress",
        "unused-imports"
      ],
      "rules": {
        "import/order": [
          "error",
          {
            "groups": [
              "builtin",
              "external",
              "internal",
              ["parent", "sibling"],
              "index"
            ],
            "pathGroups": [
              {
                "pattern": "+(components|context|generated|graphql|hooks|images|models|styles|utils)/**",
                "group": "internal",
                "position": "after"
              }
            ],
            "pathGroupsExcludedImportTypes": ["builtin"],
            "newlines-between": "always",
            "alphabetize": {
              "order": "asc",
              "caseInsensitive": true
            }
          }
        ],
        "react-hooks/rules-of-hooks": "error",
        "react-hooks/exhaustive-deps": "warn",
        "@typescript-eslint/no-use-before-define": ["error"],
        "padding-line-between-statements": [
          "error",
          { "blankLine": "always", "prev": "*", "next": "return" }
        ],
        "@typescript-eslint/no-empty-function": [
          "error",
          { "allow": ["arrowFunctions"] }
        ],
        // TODO: Switch to default "error" and fix them all
        "@typescript-eslint/naming-convention": [
          "error",
          {
            "selector": "variable",
            "format": ["camelCase", "PascalCase", "UPPER_CASE"],
            "leadingUnderscore": "allow",
            "trailingUnderscore": "allow"
          },
          {
            "selector": "function",
            "format": ["PascalCase", "camelCase"]
          }
        ],
        "react/display-name": "warn",
        "react/prop-types": "off",
        "@typescript-eslint/ban-types": [
          "error",
          {
            "types": {
              // add a custom message to help explain why not to use it
              "Function": "Use `FunctionType` instead",
              "fixWith": "FunctionType"
            }
          }
        ],
        "@typescript-eslint/ban-ts-comment": "warn",
        "@typescript-eslint/explicit-module-boundary-types": "off",
        "@typescript-eslint/no-non-null-assertion": "off", // already checked by typescript, no need to duplicate
        "unused-imports/no-unused-imports-ts": 2
      }
    }
  ]
}
